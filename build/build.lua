-- build.lua autogenerated
_debug = true

Client.OnStart = function()
    _UIKIT = require("uikit")
    
    loading_screen:start()
end

models = {}

textures = {}

data = {}

sounds = {}

-- modules

-- Debug module to store logs

debug = {}function debug.log(text)
    if _debug then
        print("Log: " .. text)
    end
end

debug._LOGS = {}

function debug.getLogs()
    local logs = ""

    for _, log in ipairs(debug._LOGS) do
        logs = logs .. log .. "\n"
    end

    Dev:CopyToClipboard(logs)
end

loading_screen = {}loading_screen.start = function(self)
    debug.log("Loading screen initialized.")

    self.background = _UIKIT:frame()
    self.background.Color = Color(0, 0, 0)
    self.background.Width = Screen.Width
    self.background.Height = Screen.Height

    self.title = _UIKIT:createText("Powered by NaN-GDK")
    self.text = _UIKIT:createText("Downloading assets...")
end

loading_screen.updateText = function(text)

end

loading_screen.finish = function(self)
    debug.log("Loading screen removed.")
    self.background:remove()
    self.background = nil

    -- play loading completed sound
    local sound = AudioSource()
    sound:SetParent(Camera)
    sound.Sound = sounds.loading_completed
    sound:Play()

    Timer(1, function()
        sound:Remove()
    end, false)
end

worldgen = {}worldgen.test = function()
    print("he")
end

local to_load = 0 
local loaded = 0

function _log(msg) debug.log(msg) end
function _check_ready() if loaded >= to_load then _log('All assets loaded') _start_game() end end

to_load = to_load + 1
_log("Downloading sounds/loading_completed")
HTTP:Get("https://raw.githubusercontent.com/Nanskip/convy-2/refs/heads/main/source/sounds/loading_completed.mp3", function(res)
    if res.StatusCode == 200 then
        sounds.loading_completed = res.Body
        _log("Downloaded sounds/loading_completed")
    else
        _log("Failed to download sounds/loading_completed: " .. res.StatusCode)
    end
    loaded = loaded + 1
    _check_ready()
end)

-- start

function _start_game()
    worldgen.test()
    
    loading_screen:finish()
    end
    
    _ON_START_CLIENT = function()
    _UIKIT = require("uikit")
    
    loading_screen:start()
end
